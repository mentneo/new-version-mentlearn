rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ============================================================================
    // PRODUCTION FIRESTORE SECURITY RULES
    // ============================================================================

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function getUserRole() {
      return isAuthenticated() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) ?
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role : 'student';
    }

    function isAdmin() {
      return getUserRole() == 'admin';
    }

    function isMentor() {
      return getUserRole() == 'mentor';
    }

    function isCreator() {
      return isAuthenticated() && exists(/databases/$(database)/documents/creators/$(request.auth.uid));
    }

    function isStudent() {
      return isAuthenticated() && !isCreator() && !isAdmin() && !isMentor();
    }

    // ============================================================================
    // USERS COLLECTION
    // ============================================================================

    match /users/{userId} {
      // Users can read and write their own profile
      allow read, write: if isOwner(userId);

      // Allow reading user profiles during authentication (for role detection)
      allow read: if isAuthenticated() && request.auth.uid == userId;

      // Users can create their own profile
      allow create: if isAuthenticated() && request.auth.uid == userId;

      // Admins can read all user profiles
      allow read: if isAdmin();

      // Creators can read user profiles for enrollment management
      allow read: if isCreator();

      // Allow authenticated users to read their own profile during auth
      allow read: if isAuthenticated();
    }

    // ============================================================================
    // CREATORS COLLECTION
    // ============================================================================

    match /creators/{creatorId} {
      // Creators can read and write their own profile
      allow read, write: if isOwner(creatorId);

      // Allow reading creator profiles during authentication (for role detection)
      allow read: if isAuthenticated() && request.auth.uid == creatorId;

      // Admins can manage all creators
      allow read, write: if isAdmin();

      // Allow authenticated users to check if they are creators (for auth flow)
      allow read: if isAuthenticated();

      // Creators can create their own profile
      allow create: if isAuthenticated() && request.auth.uid == creatorId;
    }

    // ============================================================================
    // COURSES COLLECTION
    // ============================================================================

    match /courses/{courseId} {
      // Everyone can read published courses
      allow read: if resource.data.status == 'published';

      // Authenticated users can read all courses for their dashboards
      allow read: if isAuthenticated();

      // Creators can read/write their own courses
      allow read, write: if isAuthenticated() && resource.data.creatorId == request.auth.uid;

      // Admins can manage all courses
      allow read, write: if isAdmin();

      // Authenticated users can create courses
      allow create: if isAuthenticated();

      // Allow reading draft courses by their creators
      allow read: if isAuthenticated() && resource.data.status == 'draft' && resource.data.creatorId == request.auth.uid;

      // Allow updating courses by their creators
      allow update: if isAuthenticated() && resource.data.creatorId == request.auth.uid;
    }

    // ============================================================================
    // ENROLLMENTS COLLECTION
    // ============================================================================

    match /enrollments/{enrollmentId} {
      // Users can read/write their own enrollments
      allow read, write: if isOwner(resource.data.userId);

      // Creators can read enrollments for their courses
      allow read: if isAuthenticated() &&
        exists(/databases/$(database)/documents/courses/$(resource.data.courseId)) &&
        get(/databases/$(database)/documents/courses/$(resource.data.courseId)).data.creatorId == request.auth.uid;

      // Admins can manage all enrollments
      allow read, write: if isAdmin();

      // Authenticated users can create enrollments
      allow create: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }

    // ============================================================================
    // COURSE REQUESTS COLLECTION
    // ============================================================================

    match /courseRequests/{requestId} {
      // Users can read/write their own requests
      allow read, write: if isOwner(resource.data.userId);

      // Creators can read/manage requests for their courses
      allow read, write: if isAuthenticated() &&
        exists(/databases/$(database)/documents/courses/$(resource.data.courseId)) &&
        get(/databases/$(database)/documents/courses/$(resource.data.courseId)).data.creatorId == request.auth.uid;

      // Admins can manage all requests
      allow read, write: if isAdmin();

      // Authenticated users can create course requests
      allow create: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }

    // ============================================================================
    // REFERRALS COLLECTION
    // ============================================================================

    match /referrals/{referralId} {
      // Users can read/write their own referral data
      allow read, write: if isOwner(resource.data.userId);

      // Admins can manage all referrals
      allow read, write: if isAdmin();

      // Authenticated users can create referral records
      allow create: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }

    // ============================================================================
    // INTERVIEWS COLLECTION
    // ============================================================================

    match /interviews/{interviewId} {
      // Authenticated users can read interviews
      allow read: if isAuthenticated();

      // Mentors can create/manage interviews
      allow write: if isAuthenticated() && isMentor();

      // Admins can manage all interviews
      allow read, write: if isAdmin();

      // Authenticated users can create interviews
      allow create: if isAuthenticated();
    }

    // ============================================================================
    // INTERVIEW PREPARATIONS COLLECTION
    // ============================================================================

    match /interview-preparations/{prepId} {
      // Authenticated users can read interview preparations
      allow read: if isAuthenticated();

      // Mentors can create/manage preparations
      allow write: if isAuthenticated() && isMentor();

      // Admins can manage all preparations
      allow read, write: if isAdmin();

      // Authenticated users can create preparations
      allow create: if isAuthenticated();
    }

    // ============================================================================
    // QUIZZES COLLECTION
    // ============================================================================

    match /quizzes/{quizId} {
      // Authenticated users can read quizzes
      allow read: if isAuthenticated();

      // Mentors can create/manage quizzes
      allow write: if isAuthenticated() && isMentor();

      // Admins can manage all quizzes
      allow read, write: if isAdmin();

      // Authenticated users can create quizzes
      allow create: if isAuthenticated();
    }

    // ============================================================================
    // QUIZ SUBMISSIONS COLLECTION
    // ============================================================================

    match /quiz-submissions/{submissionId} {
      // Users can read/write their own submissions
      allow read, write: if isOwner(resource.data.userId);

      // Mentors can read submissions for their quizzes
      allow read: if isAuthenticated() && isMentor();

      // Admins can manage all submissions
      allow read, write: if isAdmin();

      // Authenticated users can create submissions
      allow create: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }

    // ============================================================================
    // PAYMENTS COLLECTION
    // ============================================================================

    match /payments/{paymentId} {
      // Users can read their own payment records
      allow read: if isOwner(resource.data.userId);

      // Admins can manage all payments
      allow read, write: if isAdmin();

      // Authenticated users can create payment records
      allow create: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }

    // ============================================================================
    // NOTIFICATIONS COLLECTION
    // ============================================================================

    match /notifications/{notificationId} {
      // Users can read/write their own notifications
      allow read, write: if isOwner(resource.data.userId);

      // Admins can manage all notifications
      allow read, write: if isAdmin();

      // System can create notifications for users
      allow create: if isAuthenticated();
    }

    // ============================================================================
    // DISCUSSIONS COLLECTION (Discussion Forum)
    // ============================================================================

    match /discussions/{discussionId} {
      // Authenticated users can read all discussions
      allow read: if isAuthenticated();

      // Users can create discussions
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.authorId;

      // Users can update their own discussions
      allow update: if isAuthenticated() && 
        (request.auth.uid == resource.data.authorId || 
         request.auth.uid == get(/databases/$(database)/documents/courses/$(resource.data.courseId)).data.creatorId);

      // Users can delete their own discussions, or course creator can delete
      allow delete: if isAuthenticated() && 
        (request.auth.uid == resource.data.authorId || 
         request.auth.uid == get(/databases/$(database)/documents/courses/$(resource.data.courseId)).data.creatorId);

      // Admins can manage all discussions
      allow read, write: if isAdmin();
    }

    // ============================================================================
    // DISCUSSION REPLIES COLLECTION
    // ============================================================================

    match /discussionReplies/{replyId} {
      // Authenticated users can read all replies
      allow read: if isAuthenticated();

      // Users can create replies
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.authorId;

      // Users can update their own replies
      allow update: if isAuthenticated() && 
        (request.auth.uid == resource.data.authorId || 
         request.auth.uid == get(/databases/$(database)/documents/courses/$(resource.data.courseId)).data.creatorId);

      // Users can delete their own replies, or course creator can delete
      allow delete: if isAuthenticated() && 
        (request.auth.uid == resource.data.authorId || 
         request.auth.uid == get(/databases/$(database)/documents/courses/$(resource.data.courseId)).data.creatorId);

      // Admins can manage all replies
      allow read, write: if isAdmin();
    }

    // ============================================================================
    // ANALYTICS/REPORTS COLLECTION
    // ============================================================================

    match /analytics/{analyticsId} {
      // Only admins can access analytics data
      allow read, write: if isAdmin();
    }

    // ============================================================================
    // FALLBACK RULES FOR DEVELOPMENT
    // ============================================================================

    // Allow authenticated users basic access to any unspecified collections
    match /{collection}/{document=**} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }

    // ============================================================================
    // DEFAULT DENY - SECURITY FIRST APPROACH
    // ============================================================================

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
