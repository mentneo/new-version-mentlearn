rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // During development and initial setup, allow all operations
    match /{document=**} {
      allow read, write: if true;
    }
    
    // Uncomment these rules after initial setup is complete
    /*
    // Common functions for authentication
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isMentor() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'mentor';
    }
    
    function isStudent() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }
    
    // Users collection rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }
    
    // Courses collection rules
    match /courses/{courseId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }
    
    // All other collections
    match /{collectionName}/{docId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Referrals collection rules
    match /referrals/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow create, update: if isAuthenticated() && request.auth.uid == userId;
    }
    */
  }
}
